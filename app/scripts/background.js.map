{"version":3,"sources":["../scripts.babel/background.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;AAEb,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,UAAA,OAAO,EAAI;AAChD,SAAO,CAAC,GAAG,CAAC,iBAAiB,EAAE,OAAO,CAAC,eAAe,CAAC,CAAC;CACzD,CAAC,CAAC;;AAEH,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,UAAA,KAAK,EAAI;AACzC,QAAM,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;CAC/B,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCH,IAAM,QAAQ,GAAG,qDAAqD,CAAC;AACvE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,UAAC,EAAE,EAAE,GAAG,EAAK;;AAE7C,MAAI,GAAG,CAAC,cAAc,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACvD,QAAI,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE;2BACP,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;;;;UAAnC,GAAG;UAAE,QAAQ;;AAGpB,UAAM,OAAO,GAAG,QAAQ,CACrB,KAAK,CAAC,GAAG,CAAC,CACV,MAAM,CAAC,UAAC,GAAG,EAAE,KAAK;eAAK,GAAG,CAAC,GAAG,MAAA,CAAP,GAAG,qBAAQ,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAC;OAAA,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;;AAEnE,UAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;;AAEjE,YAAI,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;AAC7C,iBAAO;SACR,MAAM;AACL,iBAAO,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;SAC7B;;AAED,YAAM,WAAW,GAAG,GAAG,GAAG,GAAG,GAAG,6BAAI,OAAO,CAAC,OAAO,EAAE,GAChD,GAAG,CAAC,UAAC,MAAM;iBAAK,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC;SAAA,CAAC,CACjC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEf,eAAO,CAAC,GAAG,CAAC,aAAa,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AACpC,eAAO,CAAC,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AACxC,cAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,EAAC,GAAG,EAAE,WAAW,EAAC,CAAC,CAAC;OAC5C;KAEF;GACF;CACF,CAAC,CAAC","file":"background.js","sourcesContent":["'use strict';\n\nchrome.runtime.onInstalled.addListener(details => {\n  console.log('previousVersion', details.previousVersion);\n});\n\nchrome.tabs.onUpdated.addListener(tabId => {\n  chrome.pageAction.show(tabId);\n});\n\n//chrome.webRequest.onBeforeRequest.addListener(request => {\n//  if (request.url.indexOf('?') !== -1) {\n//    let seperator;\n//    if (request.url.split('?')[0].endsWith('webhp')) {\n//      seperator = '#';\n//    } else {\n//      seperator = '?';\n//    }\n//    if (request.url.indexOf(seperator) === -1) {\n//      return;\n//    }\n//\n//    const url = request.url.split(seperator)[0];\n//    const payload = request.url\n//      .split(seperator)[1]\n//      .split('&')\n//      .reduce((obj, param) => obj.set(...param.split('=')), new Map());\n//\n//    if (payload.has('tbs')) {\n//      payload.set('tbs', 'qdr:y');\n//    }\n//    console.log('payload', payload);\n//\n//\n//    const payloadString = [...payload.entries()]\n//      .map((params) => params.join('='))\n//      .join('&');\n//\n//    console.log('redirecting to', url + seperator + payloadString);\n//\n//\n//    return {redirectUrl: url + seperator + payloadString};\n//\n//  }\n//}, {urls: ['*://*.google.com/search*']}, ['blocking']);\n\nconst reGoogle = /^https?:\\/\\/(?:www\\.)?google\\.com\\/(?:webhp|search)/;\nchrome.tabs.onUpdated.addListener((id, tab) => {\n\n  if (tab.hasOwnProperty('url') && reGoogle.test(tab.url)) {\n    if (tab.url.indexOf('#') !== -1) {\n      const [url, _payload] = tab.url.split('#');\n\n\n      const payload = _payload\n        .split('&')\n        .reduce((obj, param) => obj.set(...param.split('=')), new Map());\n\n      if (payload.has('q') && payload.get('q').indexOf('ubuntu') !== -1) {\n\n        if (payload.has('tbs') || payload.has('tbas')) {\n          return;\n        } else {\n          payload.set('tbs', 'qdr:y');\n        }\n\n        const destination = url + '#' + [...payload.entries()]\n            .map((params) => params.join('='))\n            .join('&');\n\n        console.log('tab.url    ', tab.url);\n        console.log('destination', destination);\n        chrome.tabs.update(id, {url: destination});\n      }\n\n    }\n  }\n});"]}